- palettes = 2
- palette_range = 8

.form-row
  = f.input :title

- if params[:type].to_i == 1
  .form-row
    = f.input :body_first
  
  .form-row
    = f.input :body_second
    
  .form-row
    = f.input :body_thirth
    
  .form-row
    = f.label :background
    = f.input_field :background,
      class: @page.background.present? ? '_has_file' : nil, 
      style: @page.background.present? ? "background-image: url(#{@page.background.url(:medium)})" : nil

- else
  .form-row.file-map-input
    = f.label :file
    - if @page.data_layer.present?
      p = @page.data_layer[:table_name]
    .filename-selected
      p.name public.csv
      span.close Ã—
    .input-wrapper
      = f.input_field :file, as: :file, accept: ".csv", data: {filename: 'public', column: 0}
      .placeholder =t ('new_shapefile')
    / = f.simple_fields_for :data_layer do |c|
    /   = render 'data_layer_fields', f: c
    / = link_to_add_association t('add_data_layers'), f, :data_layer, class: 'btn -dotted'
  
  / .form-row
  /   = f.label :map_column
  /   = f.input_field :map_column, as: :radio_buttons

  .form-row
    = f.label :template
    = f.input_field :template, as: :hidden, value: (1), class: 'input'
    #map-columns-list.box-list
    
  .form-row
    = f.label :color_palette
    .box-selector
      - for t in 1..palettes
        .item.-col-2.-palette data-value="#{t}" class="-range-#{t} #{@page.color_palette.to_i == t ? '_selected' : nil}"
          - for r in 1..palette_range
            .range
              span.-bordered
              span
      = f.input_field :color_palette, as: :hidden, value: (@page.color_palette.to_i or 1), class: 'input'
  / .form-row#customPalette class="#{@page.color_palette.nil? ? nil : '_hidden'}"
  /   = f.input :custom_color_palette
  
  .form-row
    = f.association :charts, as: :check_boxes
    
  .form-row
    = f.simple_fields_for :interest_points do |c|
      = render 'interest_point_fields', f: c
    = link_to_add_association t('add_interest_points'), f, :interest_points, class: 'btn -dotted'

= f.hidden_field :page_type, value: params[:type]
= f.hidden_field :case_study_id, value: params[:case_study_id]

.form-row._center
  - if @page[:id]
    = link_to t('delete'), backoffice_case_study_page_path(case_study_id: params[:case_study_id], id: @page[:id]),  method: :delete, data: { confirm: t('confirm_sure') }, class: 'btn -primary -alt'
  = f.button :submit, class: 'btn -primary'
