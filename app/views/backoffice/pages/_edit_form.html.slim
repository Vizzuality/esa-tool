- palettes = 2
- palette_range = 8
- basemaps = [[t('terrain'), 'terrain', {class:"item detail-title", checked: @page.basemap.blank? || @page.basemap=="terrain" ? true : false }],
              [t('satellite'), 'satellite', {class:"item detail-title", checked: @page.basemap=="satellite" ? true : false }],
              [t('custom'), 'custom', {class:"item detail-title", data: {details:"customBasemapUrl"}, checked: @page.basemap=="custom" ? true : false } ]]

.form-row
  = f.input :title

- if @page.page_type == 1
  .form-row
    = f.input :body, input_html: {class:"-large"}

  .form-row
    = render 'backoffice/partials/input_image_file', 
      f: f, 
      name: :background, 
      image: @page.background, 
      class_name: "-large", 
      custom_label:'background',
      size_recommendations: '600x400'

- else
  .form-row
    = f.label :files
    = f.simple_fields_for :data_layers do |d|
      - if d.object.new_record?
        = render 'data_layer_fields', f: d, p:f
      - else
        = render 'data_layers_fields', f: d, p:f
  - if @page.page_type == 2
    .nested-fields.file-map-input
      .list-container data= {layerId: @page.data_layers.first.id, filename: @page.data_layers.first.table_name}
        = f.input_field :column_selected, as: :hidden, class: 'input', id: "column-input-#{@page.data_layers.first.id}"
        .box-list.-selectable._is-loading
          
  #filename
  .nested-fields
    = link_to_add_association t('add_data_layers'), f, :data_layers, class: 'btn -dotted'
  .form-row.box-selector
    = f.input :basemap, as: :radio_buttons, required: true,  collection: basemaps

    #customBasemapUrl.form-row.detail-item class=('_hidden' unless @page.basemap == 'custom')
      = f.input :basemap_url

  .form-row
    = f.label :color_palette
    .box-selector
      - for t in 1..palettes
        .item.-col-3.-palette.detail-title data-value="#{t}" data-input="pallete" class="-range-#{t} #{@page.color_palette.to_i == t ? '_selected' : nil}"
          - for r in 1..palette_range
            .range
              span.-bordered
              span
      .item.-col-3.-center.detail-title data-value="3" data-input="pallete" class="#{@page.color_palette.to_i == 3 ? '_selected' : nil}"
        label =t('custom')
        - for r in 1..palette_range-2
          .range
            span.-bordered
            span
      / #customBasemap.form-row.detail-item class=('_hidden' unless @page.color_palette == 3)
      .form-row
        .row
          .grid-sm-12
            - if @page.page_type == 2
              label = "Select the columns color for #{@page.data_layers.first.table_name}"
              .list-container id="custom-column-layer-#{@page.data_layers.first.id}" data= {table:@page.data_layers.first.table_name, column: @page.column_selected}
                = f.simple_fields_for :data_layers do |d|
                  = d.input_field :custom_columns_colors, as: :hidden, value: d.object.custom_columns_colors, class: "custom_columns_colors"
                .content
            - else 
              = f.simple_fields_for :data_layers do |d|
                - if d.object.raster_type.blank?
                  label = "Select the columns color for #{d.object.table_name}"
                - else 
                  label = "Raster categories for #{d.object.table_name}"
                .list-container.columns-container id="custom-column-layer-#{d.object.id}" data={table:d.object.table_name, column: d.object.layer_column}
                  .content
                  = d.input_field :custom_columns_colors, as: :hidden, value: d.object.custom_columns_colors, class: "custom_columns_colors"
                  = d.input_field :raster_type, as: :hidden, value: d.object.raster_type, class: "raster-type"
                  = d.input_field :raster_categories, as: :hidden, value: d.object.raster_categories, class: "raster-category"
                  = d.input :raster_color_input, input_html: {class:"-large raster_color_input"}, placeholder: "CUSTOMIZED COLORS PER COLUMNS\nPaste code here\n\nrgba(255,255,255,0.5)-column1\nrgba(73,73,73,0.7)-column2\n"
      = f.input_field :color_palette, as: :hidden, value: (@page.color_palette.to_i.blank? ? 1 : @page.color_palette.to_i), class: 'input', id:"pallete"

  .form-row
    = f.label :charts
    .box-selector.-around
      - for chart in @charts
        - if chart.name=="line" && @page.page_type == 3
        - else
          .item.checkbox data={input: "chart-#{chart.name}", multiple: "yes"}
            svg.icon-chart.-bo
              use xlink:href="#icon-chart-#{chart.name}"
    ._hidden
      = f.association :charts, as: :check_boxes, label:false, collection: @charts.map { |r| [r.name, r.id, {class: 'association-input', id: "chart-#{r.name}"}] }

  .form-row
    = f.simple_fields_for :interest_points do |c|
      = render 'interest_point_fields', f: c
    = link_to_add_association t('add_interest_points'), f, :interest_points, class: 'btn -dotted'

= f.hidden_field :page_type

.footer.-fixed
  .wrap: .row: .grid-sm-6.offset-sm-3
    .actions
      - unless @page.new_record?
        = link_to t('delete'),
          backoffice_case_study_page_path(case_study_id: @page.case_study.id,
          id: @page.id),  method: :delete,
          data: { confirm: t('confirm_sure') }, class: 'btn -alt'
      = f.button :submit, class: 'btn', id: 'saveBtn'
